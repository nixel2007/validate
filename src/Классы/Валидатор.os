#Использовать annotations
#Использовать decorator
#Использовать reflector

Перем КонтейнерАннотаций;
Перем ФабрикаВалидаций;

Перем Рефлектор;
Перем КэшВалидаций;

// Валидирует объект на основании аннотаций его свойств и возвращает найденные нарушения.
//
// Параметры:
//   Объект - Произвольный - Экземпляр для проверки.
//
// Возвращаемое значение:
//   Массив из Нарушение - Список обнаруженных нарушений; пустой массив, если нарушений нет.
//
Функция Валидировать(Объект) Экспорт
	
	РезультатВалидации = Новый Массив;
	
	РефлекторОбъекта = Новый РефлекторОбъекта(Объект);
	Свойства = РефлекторОбъекта.ПолучитьТаблицуСвойств(Неопределено, Истина);

	Для Каждого Свойство Из Свойства Цикл
		
		Для Каждого Аннотация Из Свойство.Аннотации Цикл
			
			Если НЕ ФабрикаВалидаций.ЭтоАннотацияВалидации(Аннотация.Имя) Тогда
				Продолжить;
			КонецЕсли;

			ОпределениеАннотации = КонтейнерАннотаций.ПолучитьОпределениеАннотации(Аннотация.Имя);

			Если ОпределениеАннотации = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		
			Ограничение = ОпределениеАннотации.СоздатьОбъектАннотации(Аннотация);
			Валидация = ФабрикаВалидаций.СоздатьОбъектВалидации(Ограничение);
						
			Значение = Рефлектор.ПолучитьСвойство(Объект, Свойство.Имя);
		
			ЗначениеВалидно = Валидация.ЗначениеВалидно(Значение);
			
			Если НЕ ЗначениеВалидно Тогда
				Нарушение = Новый Нарушение(Объект, Свойство.Имя, Ограничение.Сообщение(), Ограничение.Код());
				
				РезультатВалидации.Добавить(Нарушение);
			КонецЕсли;

		КонецЦикла;
	
	КонецЦикла;
	
	Возврат РезультатВалидации;
	
КонецФункции

// Формирует человекочитаемое текстовое описание списка нарушений валидации.
//
// Параметры:
//   РезультатВалидации - Массив - Массив объектов Нарушение.
//
// Возвращаемое значение:
//   Строка - Описание нарушений; пустая строка, если нарушений нет.
//
Функция ОписаниеОшибокВалидации(РезультатВалидации) Экспорт

	ТекстИсключения = "";

	Если РезультатВалидации.Количество() = 0 Тогда
		Возврат ТекстИсключения;
	КонецЕсли;
	
	Для Каждого Нарушение Из РезультатВалидации Цикл

		ОригинальныйТипОбъекта = ОбработкаДекоратора.ИсходныйТип(Нарушение.Объект());

		ОписаниеНарушения = СтрШаблон(
			"[%1]: Объект: %2, Свойство: %3, Сообщение: %4",
			Нарушение.Код(),
			ОригинальныйТипОбъекта,
			Нарушение.ИмяСвойства(),
			Нарушение.Сообщение()
		);
		ТекстИсключения = ТекстИсключения + ОписаниеНарушения + Символы.ПС;

	КонецЦикла;
	
	Возврат ТекстИсключения;
	
КонецФункции

// Инициализирует валидатор, фабрику валидаций и контейнер аннотаций.
// Параметры:
//   пФабрикаВалидаций   - ФабрикаВалидаций   - Фабрика валидаций; если Неопределено, создаётся стандартная.
//   пКонтейнерАннотаций - КонтейнерАннотаций - Контейнер аннотаций;
//                                              если Неопределено, регистрируются стандартные аннотации.
Процедура ПриСозданииОбъекта(пФабрикаВалидаций = Неопределено, пКонтейнерАннотаций = Неопределено)

	Рефлектор = Новый Рефлектор;

	Если пФабрикаВалидаций = Неопределено Тогда
		ФабрикаВалидаций = Новый СтандартнаяФабрикаВалидаций(ЭтотОбъект);
	Иначе
		ФабрикаВалидаций = пФабрикаВалидаций;
	КонецЕсли;

	Если пКонтейнерАннотаций = Неопределено Тогда
		КонтейнерАннотаций = Новый КонтейнерАннотаций;
		КонтейнерАннотаций.ДобавитьАннотацию(Тип("АннотацияВалидно"));
		КонтейнерАннотаций.ДобавитьАннотацию(Тип("АннотацияЗаполнено"));
		КонтейнерАннотаций.ДобавитьАннотацию(Тип("АннотацияИстина"));
		КонтейнерАннотаций.ДобавитьАннотацию(Тип("АннотацияЛожь"));
		КонтейнерАннотаций.ДобавитьАннотацию(Тип("АннотацияМаксимум"));
		КонтейнерАннотаций.ДобавитьАннотацию(Тип("АннотацияМинимум"));
	Иначе
		КонтейнерАннотаций = пКонтейнерАннотаций;
	КонецЕсли;

	КэшВалидаций = Новый Соответствие();

КонецПроцедуры
