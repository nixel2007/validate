#Использовать reflector

// Список валидаций:
//  * Ключ - Строка - Имя аннотации
//  * Значение - Имя класса валидации
Перем Валидации;

Перем РефлекторОбъекта;
Перем Рефлектор;

Процедура УстановитьВалидации(пВалидации) Экспорт
	
	Валидации = пВалидации;
	
КонецПроцедуры

Функция Валидировать(Объект) Экспорт
	
	РезультатВалидации = Новый Массив;
	
	РефлекторОбъекта.УстановитьОбъект(Объект);
	Для Каждого ДанныеВалидации Из Валидации Цикл
		ИмяАннотации = ДанныеВалидации.Ключ;
		ТипВалидации = ДанныеВалидации.Значение;
		
		Свойства = РефлекторОбъекта.ПолучитьТаблицуСвойств(ИмяАннотации, Истина);
		Для Каждого Свойство Из Свойства Цикл
			
			Аннотация = Свойство.Аннотации.Найти(ИмяАннотации, "Имя");

			Валидация = Новый(ТипВалидации);
			Валидация.Инициалилизировать(Аннотация);
			
			Значение = Рефлектор.ПолучитьСвойство(Объект, Свойство.Имя);
			
			ЗначениеВалидно = Валидация.ЗначениеВалидно(Значение);
			
			Если НЕ ЗначениеВалидно Тогда
				Нарушение = Новый Нарушение(Объект, "Поле", Свойство.Имя, "Что-то пошло не так", "Какой-то код");
				
				РезультатВалидации.Добавить(Нарушение);
			КонецЕсли;

		КонецЦикла;
		
		
	КонецЦикла;
	
	Возврат РезультатВалидации;
	
КонецФункции

Функция СтандартныеВалидации()
	
	СтандартныеВалидации = Новый Структура;
	СтандартныеВалидации.Вставить("Заполнено", Тип("ВалидацияОграниченияЗаполнено"));
	
	Возврат СтандартныеВалидации;
	
КонецФункции

Процедура ПриСозданииОбъекта()
	
	Валидации = СтандартныеВалидации();
	РефлекторОбъекта = Новый РефлекторОбъекта();
	Рефлектор = Новый Рефлектор;
	
КонецПроцедуры