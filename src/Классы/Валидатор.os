#Использовать reflector

// ТаблицаЗначений - Список валидаций:
//  * ИмяОграничения - Строка - Имя аннотации ограничения
//  * ИмяКлассаОграничения - Строка - Имя класса ограничения
//  * ИмяКлассаВалидации - Имя класса валидации
Перем Валидации;

Перем РефлекторОбъекта;
Перем Рефлектор;

Процедура УстановитьВалидации(пВалидации) Экспорт
	
	Валидации = пВалидации;
	
КонецПроцедуры

Функция Валидировать(Объект) Экспорт
	
	РезультатВалидации = Новый Массив;
	
	РефлекторОбъекта.УстановитьОбъект(Объект);
	Для Каждого ДанныеВалидации Из Валидации Цикл
		ОбработатьПоляКласса(Объект, ДанныеВалидации, РезультатВалидации);
	КонецЦикла;
	
	Возврат РезультатВалидации;
	
КонецФункции

Процедура ОбработатьПоляКласса(Объект, ДанныеВалидации, РезультатВалидации)

	ИмяОграничения = ДанныеВалидации.ИмяОграничения;
	ИмяКлассаОграничения = ДанныеВалидации.ИмяКлассаОграничения;
	ИмяКлассаВалидации = ДанныеВалидации.ИмяКлассаВалидации;

	Свойства = РефлекторОбъекта.ПолучитьТаблицуСвойств(ИмяОграничения, Истина);
	Для Каждого Свойство Из Свойства Цикл
		
		Аннотация = Свойство.Аннотации.Найти(ИмяОграничения, "Имя");

		Валидация = Новый(ИмяКлассаВалидации);
		Валидация.Инициалилизировать(Аннотация);
		
		Значение = Рефлектор.ПолучитьСвойство(Объект, Свойство.Имя);
		
		ЗначениеВалидно = Валидация.ЗначениеВалидно(Значение);
		
		Если НЕ ЗначениеВалидно Тогда
			Ограничение = Новый(ИмяКлассаОграничения);
			Нарушение = Новый Нарушение(Объект, "Поле", Свойство.Имя, Ограничение.Сообщение(), Ограничение.Код());
			
			РезультатВалидации.Добавить(Нарушение);
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Функция СтандартныеВалидации()
	
	СтандартныеВалидации = Новый ТаблицаЗначений();
	СтандартныеВалидации.Колонки.Добавить("ИмяОграничения");
	СтандартныеВалидации.Колонки.Добавить("ИмяКлассаОграничения");
	СтандартныеВалидации.Колонки.Добавить("ИмяКлассаВалидации");
	
	ИменаСтандартныхВалидаций = Новый Массив;
	ИменаСтандартныхВалидаций.Добавить("ВалидацияОграниченияЗаполнено");

	Для Каждого ИмяКлассаВалидации Из ИменаСтандартныхВалидаций Цикл
		ИмяКлассаОграничения = ИмяКлассаОграничения(ИмяКлассаВалидации);
		ИмяОграничения = ИмяОграничения(ИмяКлассаОграничения);

		СтандартнаяВалидация = СтандартныеВалидации.Добавить();
		СтандартнаяВалидация.ИмяОграничения = ИмяОграничения;
		СтандартнаяВалидация.ИмяКлассаОграничения = ИмяКлассаОграничения;
		СтандартнаяВалидация.ИмяКлассаВалидации = ИмяКлассаВалидации;
	КонецЦикла;
	
	Возврат СтандартныеВалидации;
	
КонецФункции

Функция ИмяКлассаОграничения(ИмяКлассаВалидации)

	РефлекторОбъекта.УстановитьОбъект(Тип(ИмяКлассаВалидации));
	Методы = РефлекторОбъекта.ПолучитьТаблицуМетодов("Ограничение", Ложь);

	Конструктор = Методы[0];

	Аннотация = Конструктор.Аннотации.Найти("ограничение", "Имя");

	Возврат Аннотация.Параметры[0].Значение;

КонецФункции

Функция ИмяОграничения(ИмяКлассаОграничения)

	РефлекторОбъекта.УстановитьОбъект(Тип(ИмяКлассаОграничения));
	Методы = РефлекторОбъекта.ПолучитьТаблицуМетодов("ИмяОграничения", Ложь);

	Конструктор = Методы[0];

	Аннотация = Конструктор.Аннотации.Найти("имяограничения", "Имя");

	Возврат Аннотация.Параметры[0].Значение;

КонецФункции

Процедура ПриСозданииОбъекта()
	
	РефлекторОбъекта = Новый РефлекторОбъекта();
	Рефлектор = Новый Рефлектор;

	Валидации = СтандартныеВалидации();
	
КонецПроцедуры